{"id":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","dependencies":[{"name":"/Users/hagereldakroury/Documents/projects/edam2json-demo/package.json","includedInParent":true,"mtime":1625078577814},{"name":"/Users/hagereldakroury/Documents/projects/edam2json-demo/node_modules/edam2json/node_modules/rdf-data-factory/package.json","includedInParent":true,"mtime":1624342902790}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quad = void 0;\n/**\n * An instance of DefaultGraph represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass Quad {\n    constructor(subject, predicate, object, graph) {\n        this.termType = 'Quad';\n        this.value = '';\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph;\n    }\n    equals(other) {\n        // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n        return !!other && (other.termType === 'Quad' || !other.termType) &&\n            this.subject.equals(other.subject) &&\n            this.predicate.equals(other.predicate) &&\n            this.object.equals(other.object) &&\n            this.graph.equals(other.graph);\n    }\n}\nexports.Quad = Quad;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"node_modules/edam2json/node_modules/rdf-data-factory/lib/Quad.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quad = void 0;\n/**\n * An instance of DefaultGraph represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass Quad {\n    constructor(subject, predicate, object, graph) {\n        this.termType = 'Quad';\n        this.value = '';\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph;\n    }\n    equals(other) {\n        // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n        return !!other && (other.termType === 'Quad' || !other.termType) &&\n            this.subject.equals(other.subject) &&\n            this.predicate.equals(other.predicate) &&\n            this.object.equals(other.object) &&\n            this.graph.equals(other.graph);\n    }\n}\nexports.Quad = Quad;\n"},"lineCount":27}},"error":null,"hash":"037edb593875e3c5d81d4e60a4764303","cacheData":{"env":{}}}