{"id":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","dependencies":[{"name":"/Users/hagereldakroury/Documents/projects/edam2json-demo/package.json","includedInParent":true,"mtime":1625078577814},{"name":"/Users/hagereldakroury/Documents/projects/edam2json-demo/node_modules/edam2json/node_modules/rdf-data-factory/package.json","includedInParent":true,"mtime":1624342902790},{"name":"./NamedNode","loc":{"line":4,"column":28},"parent":"/Users/hagereldakroury/Documents/projects/edam2json-demo/node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","resolved":"/Users/hagereldakroury/Documents/projects/edam2json-demo/node_modules/edam2json/node_modules/rdf-data-factory/lib/NamedNode.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Literal = void 0;\nconst NamedNode_1 = require(\"./NamedNode\");\n/**\n * A term that represents an RDF literal, containing a string with an optional language tag or datatype.\n */\nclass Literal {\n    constructor(value, languageOrDatatype) {\n        this.termType = 'Literal';\n        this.value = value;\n        if (typeof languageOrDatatype === 'string') {\n            this.language = languageOrDatatype;\n            this.datatype = Literal.RDF_LANGUAGE_STRING;\n        }\n        else if (languageOrDatatype) {\n            this.language = '';\n            this.datatype = languageOrDatatype;\n        }\n        else {\n            this.language = '';\n            this.datatype = Literal.XSD_STRING;\n        }\n    }\n    equals(other) {\n        return !!other && other.termType === 'Literal' && other.value === this.value &&\n            other.language === this.language && other.datatype.equals(this.datatype);\n    }\n}\nexports.Literal = Literal;\nLiteral.RDF_LANGUAGE_STRING = new NamedNode_1.NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\nLiteral.XSD_STRING = new NamedNode_1.NamedNode('http://www.w3.org/2001/XMLSchema#string');\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"node_modules/edam2json/node_modules/rdf-data-factory/lib/Literal.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Literal = void 0;\nconst NamedNode_1 = require(\"./NamedNode\");\n/**\n * A term that represents an RDF literal, containing a string with an optional language tag or datatype.\n */\nclass Literal {\n    constructor(value, languageOrDatatype) {\n        this.termType = 'Literal';\n        this.value = value;\n        if (typeof languageOrDatatype === 'string') {\n            this.language = languageOrDatatype;\n            this.datatype = Literal.RDF_LANGUAGE_STRING;\n        }\n        else if (languageOrDatatype) {\n            this.language = '';\n            this.datatype = languageOrDatatype;\n        }\n        else {\n            this.language = '';\n            this.datatype = Literal.XSD_STRING;\n        }\n    }\n    equals(other) {\n        return !!other && other.termType === 'Literal' && other.value === this.value &&\n            other.language === this.language && other.datatype.equals(this.datatype);\n    }\n}\nexports.Literal = Literal;\nLiteral.RDF_LANGUAGE_STRING = new NamedNode_1.NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\nLiteral.XSD_STRING = new NamedNode_1.NamedNode('http://www.w3.org/2001/XMLSchema#string');\n"},"lineCount":33}},"error":null,"hash":"c6d9ec8555460c8021eb7870c0fceb11","cacheData":{"env":{}}}